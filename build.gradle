plugins {
    id 'java'
    id 'idea'
}

group 'xyz.duncanruns.jingle'
version '1.1.4'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url 'https://jitpack.io' }
}

configurations {
    implementation {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.13.0'
    implementation 'net.java.dev.jna:jna-platform:5.13.0'

    implementation 'org.apache.commons:commons-lang3:3.15.0'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation 'commons-io:commons-io:2.17.0'

    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    implementation 'com.github.tuupertunut:powershell-lib-java:2.0.0'
    implementation 'com.formdev:flatlaf:3.5.1'
    implementation 'com.jetbrains.intellij.java:java-gui-forms-rt:203.7148.30'
    implementation 'org.luaj:luaj-jse:3.0.1'

    testImplementation 'junit:junit:4.13.2'
}

test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    manifest {
        attributes 'Main-Class': 'xyz.duncanruns.jingle.JingleAppLaunch',
                'Multi-Release': true,
                'Implementation-Version': version
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}